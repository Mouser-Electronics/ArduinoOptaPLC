
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/<YOURPASSKEYHERE>

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool lowerSensorTripped;
  bool upperSensorTripped;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "arduino_secrets.h"
#include "thingProperties.h"
#include <ArduinoModbus.h>


byte controlBoardAddress = 0x01;
int motor1 = 1;
int motor2 = 2;
int motorTimeOn = 5000;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  if (!ModbusRTUClient.begin(9600)) {
    Serial.println("Failed to start Modbus RTU Client!");
    //while (1);
  }

  pinMode(A2, INPUT);  //  The lower beam break sensor
  pinMode(A3, INPUT);  // The upper beam break sensor
  attachInterrupt(digitalPinToInterrupt(A2), lowerBeamBreak_ISR, LOW);
}

void loop() {
  ArduinoCloud.update();
  // Your code here
}



void lowerBeamBreak_ISR() {
  lowerSensorTripped = HIGH;
  upperSensorTripped = !digitalRead(A3);

  if (upperSensorTripped) {
    // tall package detected

    if (!ModbusRTUClient.holdingRegisterWrite(controlBoardAddress, motor1, 0x0100)) {  // 0x0100 relay on
      Serial.print("Large Package Detected. Failed to turn on Motor2 ");
      Serial.println(ModbusRTUClient.lastError());
    } else {
      Serial.println("Large Package Detected. Motor1 ON. ");
      delay(motorTimeOn);
      ModbusRTUClient.holdingRegisterWrite(controlBoardAddress, motor1, 0x0200);
      lowerSensorTripped = LOW;
      upperSensorTripped = LOW;
    }
  } else {
    // small package detected
    if (!ModbusRTUClient.holdingRegisterWrite(controlBoardAddress, motor2, 0x0100)) {  // 0x0100 relay on
      Serial.print("Small Package Detected. Failed to turn on Motor2. ");
      Serial.println(ModbusRTUClient.lastError());
    } else {
      Serial.println("Small Package Detected. Motor2 ON. ");
      delay(motorTimeOn);
      ModbusRTUClient.holdingRegisterWrite(controlBoardAddress, motor2, 0x0200);
      lowerSensorTripped = LOW;
      upperSensorTripped = LOW;
    }
  }
}
